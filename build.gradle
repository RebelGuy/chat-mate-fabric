plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// for Mod Menu
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
}

loadProperties()

def loadProperties() {
	def environment = hasProperty('env') ? env : 'local'
	println "Building for environment " + environment

	def configFile = file('config.groovy')
	def config = new ConfigSlurper(environment).parse(configFile.toURL())

	def numCommits = ""
	def proc1 = "git rev-list HEAD --count".execute()
	proc1.in.eachLine { line -> numCommits = line }
	proc1.err.eachLine { line -> println line }
	proc1.waitFor()

	def commitHash = ""
	def proc2 = "git rev-parse --short HEAD".execute()
	proc2.in.eachLine { line -> commitHash = line }
	proc2.err.eachLine { line -> println line }
	proc2.waitFor()

	config.setProperty('BUILD_NAME', "v${project.version}.${numCommits} (${commitHash})")

	project.ext.config = config
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'javax.websocket:javax.websocket-client-api:1.1'

	// this must be added to fix runtime issues with the websocket library (classdef not found)
	include 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.13'

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	// this will ensure that this task is redone when the version changes
	inputs.property "version", project.version

	// also update when the config changes
	inputs.property "config", project.ext.config

	from(sourceSets.main.resources.srcDirs) {
		duplicatesStrategy('include')

        include 'environment.yml'

        // replace the templates in the `environment.yml` file with the config values
        def config = project.ext.config as ConfigObject
        expand((Map)config.toProperties()) // for some reason, `getProperties()` doesn't return the values, but this works too!
    }

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}